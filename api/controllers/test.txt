func (server *Server) UpdateProfileData(c *gin.Context) {

    // Check if User is JWT Authenticated
    uid, err := auth.ExtractTokenID(c.Request)
	if err != nil {
		c.JSON(http.StatusUnauthorized, gin.H{
			"status":  http.StatusUnauthorized,
			"message": err,
		})
		return
	}

    // Check if User exists
    user := models.User{}
    err = server.DB.Debug().Model(models.User{}).Where("id = ?, uid).Take(&user).Error

    if err != nil {
        c.JSON(http.StatusUnauthorized, gin.H{
            "status": http.StatusUnauthorized,
            "message": "Unauthorized",
        })
        return
    }

    // Read Data 
    body, err := ioutil.ReadAll(c.Request.Body)
    if err != nil {
        c.JSON(http.StatusUnprocessableEntity, gin.H{
            "status": http.StatusUnprocessableEntity,
            "message": "Unable to get request",
        })
        return
    }

    err = json.Unmarshal(body, &profile)
    if err != nil {
        c.JSON(http.StatusUnprocessableEntity, gin.H{
            "status": http.StatusUnprocessableEntity,
            "message": "Cannot Unmarshal Body",
        })
        return
    }



    profile.UserID = uid


    profileCreated, err := profile.SaveProfile(server.DB)
	if err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{
			"status":  http.StatusInternalServerError,
			"message": err,
		})
		return
	}

	c.JSON(http.StatusCreated, gin.H{
		"status":  http.StatusCreated,
		"message": profileCreated,
	})


}